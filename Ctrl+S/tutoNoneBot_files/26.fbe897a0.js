(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{168:function(t,s,e){"use strict";e.r(s);var n=e(0),a=Object(n.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("一切都安装成功后，你就已经做好了进行简单配置以运行一个最小的 NoneBot 实例的准备。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),e("p",[t._v("在命令行使用如下命令即可运行这个 NoneBot 实例：")]),t._v(" "),t._m(7),e("p",[t._v("运行后会产生如下日志：")]),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),e("p",[t._v("单纯运行 NoneBot 实例并不会产生任何效果，因为此刻 酷Q 这边还不知道 NoneBot 的存在，也就无法把消息发送给它，因此现在需要对 CoolQ HTTP API 插件做一个简单的配置来让它把消息等事件上报给 NoneBot。")]),t._v(" "),e("p",[t._v("如果你在之前已经按照 "),e("router-link",{attrs:{to:"/guide/installation.html"}},[t._v("安装")]),t._v(" 的建议使用默认配置运行了一次 CoolQ HTTP API 插件，此时 酷Q 的 "),e("code",[t._v("data/app/io.github.richardchien.coolqhttpapi/config/")]),t._v(" 目录中应该已经有了一个名为 "),e("code",[t._v("<user-id>.json")]),t._v(" 的文件（"),e("code",[t._v("<user-id>")]),t._v(" 为你登录的 QQ 账号）。修改这个文件，"),e("strong",[t._v("修改如下配置项（如果不存在相应字段则添加）")]),t._v("：")],1),t._v(" "),t._m(11),t._v(" "),t._m(12),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._m(13),t._v("，如果在 "),e("code",[t._v("nonebot.run()")]),t._v(" 中传入的 "),e("code",[t._v("host")]),t._v(" 是 "),e("code",[t._v("0.0.0.0")]),t._v("，则插件的配置中需使用任意一个能够访问到 NoneBot 所在环境的 IP，"),t._m(14),t._v("。特别地，如果你的 酷Q 运行在 Docker 容器中，NoneBot 运行在宿主机中，则默认情况下这里需使用 "),e("code",[t._v("172.17.0.1")]),t._v("（即宿主机在 Docker 默认网桥上的 IP，不同机器有可能不同，如果是 macOS 系统或者 Windows 系统，可以考虑使用 "),e("code",[t._v("host.docker.internal")]),t._v("，具体解释详见 Docker 文档的 "),e("a",{attrs:{href:"https://docs.docker.com/docker-for-mac/networking/#use-cases-and-workarounds",target:"_blank",rel:"noopener noreferrer"}},[t._v("Use cases and workarounds"),e("OutboundLink")],1),t._v(" 的「I WANT TO CONNECT FROM A CONTAINER TO A SERVICE ON THE HOST」小标题）。")])]),t._v(" "),e("p",[t._v("修改之后，在 酷Q 的应用菜单中重启 CoolQ HTTP API 插件，或直接重启 酷Q，以使新的配置文件生效。")]),t._v(" "),t._m(15),t._v(" "),e("p",[t._v("一旦新的配置文件正确生效之后，NoneBot 所在的控制台（如果正在运行的话）应该会输出类似下面的内容（两条访问日志）：")]),t._v(" "),t._m(16),e("p",[t._v("这表示 CoolQ HTTP API 插件已经成功地连接上了 NoneBot，与此同时，插件的日志文件中也会输出反向 WebSocket 连接成功的日志。")]),t._v(" "),t._m(17),t._v(" "),e("p",[t._v("现在，尝试向你的 QQ 机器人账号发送如下内容：")]),t._v(" "),t._m(18),t._m(19)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"开始使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开始使用","aria-hidden":"true"}},[this._v("#")]),this._v(" 开始使用")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"最小实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最小实例","aria-hidden":"true"}},[this._v("#")]),this._v(" 最小实例")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用你最熟悉的编辑器或 IDE，创建一个名为 "),s("code",[this._v("bot.py")]),this._v(" 的文件，内容如下：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-python line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" nonebot\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    nonebot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    nonebot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_builtin_plugins"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    nonebot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'127.0.0.1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("if __name__ == '__main__'")]),this._v(" 语句块的这几行代码将依次：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("使用默认配置初始化 NoneBot 包")]),this._v(" "),s("li",[this._v("加载 NoneBot 内置的插件")]),this._v(" "),s("li",[this._v("在地址 "),s("code",[this._v("127.0.0.1:8080")]),this._v(" 运行 NoneBot")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("这里 "),e("code",[t._v("nonebot.run()")]),t._v(" 的参数 "),e("code",[t._v("host='127.0.0.1'")]),t._v(" 表示让 NoneBot 监听本地环回地址，如果你的 酷Q 运行在非本机的其它位置，例如 Docker 容器内、局域网内的另一台机器上等，则这里需要修改 "),e("code",[t._v("host")]),t._v(" 参数为希望让 CoolQ HTTP API 插件访问的 IP。如果不清楚该使用哪个 IP，或者希望本机的所有 IP 都被监听，可以使用 "),e("code",[t._v("0.0.0.0")]),t._v("。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[this._v("python bot.py\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('[2019-01-26 14:24:15,984 nonebot] INFO: Succeeded to import "nonebot.plugins.base"\n[2019-01-26 14:24:15,987 nonebot] INFO: Running on 127.0.0.1:8080\nRunning on https://127.0.0.1:8080 (CTRL + C to quit)\n')])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("除此之外可能有一些红色的警告信息和 "),s("code",[this._v("ASGI Framework Lifespan error")]),this._v(" 等，可以忽略。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"配置-coolq-http-api-插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-coolq-http-api-插件","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置 CoolQ HTTP API 插件")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("注意")]),this._v(" "),s("p",[this._v("如果使用 CoolQ HTTP API 插件官方 Docker 镜像运行 酷Q，则配置文件所在目录可能是 "),s("code",[this._v("app/io.github.richardchien.coolqhttpapi/config/")]),this._v("。")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ws_reverse_api_url"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws://127.0.0.1:8080/ws/api/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ws_reverse_event_url"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws://127.0.0.1:8080/ws/event/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"use_ws_reverse"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("strong",[t._v("这里的 "),e("code",[t._v("127.0.0.1:8080")]),t._v(" 对应 "),e("code",[t._v("nonebot.run()")]),t._v(" 中传入的 "),e("code",[t._v("host")]),t._v(" 和 "),e("code",[t._v("port")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("strong",[this._v("不要直接填 "),s("code",[this._v("0.0.0.0")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"历史性的第一次对话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#历史性的第一次对话","aria-hidden":"true"}},[this._v("#")]),this._v(" 历史性的第一次对话")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("[2019-01-26 16:23:17,159] 172.29.84.18:50639 GET /ws/api/ 1.1 101 - 986\n[2019-01-26 16:23:17,201] 172.29.84.18:53839 GET /ws/event/ 1.1 101 - 551\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"warning custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[t._v("如果到这一步你没有看到上面这样的日志，请查看插件的日志文件中是否在不断尝试重连（可通过将插件的 "),e("code",[t._v("show_log_console")]),t._v(" 配置项设置为 "),e("code",[t._v("true")]),t._v(" 来显示日志控制台，方便调试），如果没有在不断重连，也说明连接成功.")]),t._v(" "),e("p",[t._v("除此之外，也可以直接向机器人随便发送一些消息，观察 NoneBot 运行日志中是否有输出，如果有，说明连接成功。")]),t._v(" "),e("p",[t._v("如果 NoneBot 运行日志中没有任何访问日志，插件的日志中也在不断重连，请注意检查配置中的 IP 和端口是否确实可以访问。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("/echo 你好，世界\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("到这里如果一切都没有问题，你应该会收到机器人给你回复了 "),s("code",[this._v("你好，世界")]),this._v("。这一历史性的对话标志着你已经成功地运行了一个 NoneBot 的最小实例，开始了编写更强大的 QQ 机器人的创意之旅！")])}],!1,null,null,null);a.options.__file="getting-started.md";s.default=a.exports}}]);